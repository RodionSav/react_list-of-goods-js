{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","sort","f1","f2","localeCompare","length","reverse","getReorderedGoods","nonInitialState","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2BK,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA3BD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,IAAK,WACH,OAAOO,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITR,GACFG,EAAaM,UAGRN,EAMOO,CAAkBf,EAAiB,CAAEG,WAAUE,eACvDW,EAA+B,SAAbb,GAAuBE,EAO/C,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAyB,aAAbhB,IAEdiB,QAAS,kBAAMhB,EAAY,aAL7B,iCAUA,wBACEc,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAyB,WAAbhB,IAEdiB,QAAS,kBAAMhB,EAAY,WAL7B,4BAUA,wBACEc,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAA2B,IAAfd,IAEde,QAAS,kBAAMd,GAAeD,IALhC,qBAUCW,GAED,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA3CM,WACZhB,EAAY,QACZE,GAAc,IAsCV,sBAUF,6BACGC,EAAMc,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,aChG/CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f675fd08.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport function getReorderedGoods(\n  goods,\n  { sortType, isReversed },\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((f1, f2) => {\n    switch (sortType) {\n      case 'alphabet':\n        return f1.localeCompare(f2);\n      case 'length':\n        return f1.length - f2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('none');\n  const [isReversed, setIsReversed] = useState(false);\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n  const nonInitialState = sortType !== 'none' || isReversed;\n\n  const reset = () => {\n    setSortType('none');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== 'alphabet',\n          })}\n          onClick={() => setSortType('alphabet')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== 'length',\n          })}\n          onClick={() => setSortType('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': isReversed === false,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {nonInitialState\n        && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => <li data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}